{
    "sourceFile": "coffeeMachine.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1650858690212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1650858866698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,17 +179,20 @@\n                     'Wrong operation, please enter the correct operation:')\r\n             if haveCoupon == 'Y' or haveCoupon == 'y':\r\n                 # Check whether the coupon is valid.\r\n                 coupon = input('Please enter your coupon([Q\\q] for quit): ')\r\n-                while coupon not in couponInformationList:\r\n-                    coupon = input('Please enter a valid coupon: ')\r\n+                if coupon == 'Q' or coupon == 'q':\r\n \r\n-                # Reduce the price.\r\n-                currentPrice = coffeeInformationList[int(\r\n-                    selection) - 1]['Price'] * discount\r\n-                print('Good, you have a coupon with {2}%% discount, the price of your item will be: {0} * 0.8 = {1}, enjoy!'.format(\r\n-                    coffeeInformationList[int(selection) - 1]['Price'], currentPrice, int(discount * 100)))\r\n+                else:\r\n+                    while coupon not in couponInformationList:\r\n+                        coupon = input('Please enter a valid coupon: ')\r\n \r\n+                    # Reduce the price.\r\n+                    currentPrice = coffeeInformationList[int(\r\n+                        selection) - 1]['Price'] * discount\r\n+                    print('Good, you have a coupon with {2}%% discount, the price of your item will be: {0} * 0.8 = {1}, enjoy!'.format(\r\n+                        coffeeInformationList[int(selection) - 1]['Price'], currentPrice, int(discount * 100)))\r\n+\r\n             # If no coupon is available, just continue to the payment step.\r\n             totalPayment = 0\r\n             print(\"Please enter your cash.\")\r\n             # While the money is not enough.\r\n"
                },
                {
                    "date": 1650858928821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,9 +180,9 @@\n             if haveCoupon == 'Y' or haveCoupon == 'y':\r\n                 # Check whether the coupon is valid.\r\n                 coupon = input('Please enter your coupon([Q\\q] for quit): ')\r\n                 if coupon == 'Q' or coupon == 'q':\r\n-\r\n+                    print('Sorry, there is no coupon.')\r\n                 else:\r\n                     while coupon not in couponInformationList:\r\n                         coupon = input('Please enter a valid coupon: ')\r\n \r\n"
                }
            ],
            "date": 1650858690212,
            "name": "Commit-0",
            "content": "#!/usr/bin/env python3\r\n# -*- coding: utf-8 -*-\r\n\"\"\"Coffee machine.\r\n\r\n    Date: 2022-04-25\r\n    Version: 1.0\r\n\"\"\"\r\n\r\nimport ast\r\nimport time\r\n\r\n\r\ndef initialization():\r\n    \"\"\"Initialize basic information for the machine from the external file.\r\n\r\n    Returns:\r\n        tuple: The basic information of the machine.\r\n    \"\"\"\r\n    coffeeInformationList = []\r\n    coffeeIngredientList = []\r\n    couponInformationList = []\r\n\r\n    with open('./coffee.txt', 'r') as coffeeFile:\r\n        # Initialize the coffee from the external file.\r\n        for line in coffeeFile.readlines():\r\n            if line:\r\n                # Avoid the empty line.\r\n                coffeeInformationList.append(ast.literal_eval(line))\r\n\r\n    with open('./coupon.txt', 'r') as couponFile:\r\n        # Initialize the coupon from the external file.\r\n        for line in couponFile.readlines():\r\n            if line:\r\n                # Avoid the empty line.\r\n                couponInformationList.append(line.strip('\\n'))\r\n\r\n    with open('./ingredients.txt', 'r') as ingredientsFile:\r\n        # Initialize the ingredients from the external file.\r\n        for line in ingredientsFile.readlines():\r\n            if line:\r\n                # Avoid the empty line.\r\n                coffeeIngredientList.append(ast.literal_eval(line))\r\n\r\n    return coffeeInformationList, coffeeIngredientList, couponInformationList\r\n\r\n\r\ndef checkAbility(waterAmount, milkAmount, coffeeAmount, coffeeInformationList, selection):\r\n    \"\"\"Check the ability to produce the coffee.\r\n\r\n    Args:\r\n        waterAmount (int): Amount of water.\r\n        milkAmount (int): Amount of milk.\r\n        coffeeAmount (int): Amount of coffee.\r\n        coffeeInformationList (list): List that contains the information of the coffee.\r\n        selection (str): The selection of the user.\r\n\r\n    Returns:\r\n        bool: True if the coffee can be produced, otherwise False.\r\n    \"\"\"\r\n    # Get the information of the coffee.\r\n    coffeeInformation = coffeeInformationList[int(selection) - 1]\r\n\r\n    # Check the ability to produce the coffee.\r\n    if coffeeInformation['WaterAmount'] <= waterAmount and coffeeInformation['MilkAmount'] <= milkAmount and coffeeInformation['CoffeeAmount'] <= coffeeAmount:\r\n        return True\r\n    else:\r\n        return False\r\n\r\n\r\ndef takeMoney():\r\n    \"\"\"Calculate the total money with the given amount, here we only consider the integer scenario.\r\n\r\n    Returns:\r\n        int: Total money.\r\n    \"\"\"\r\n\r\n    amountOf20 = int(input('Amount of 20$ bills: '))\r\n    amountOf10 = int(input('Amount of 10$ bills: '))\r\n    amountOf5 = int(input('Amount of 5$ bills: '))\r\n    amountOf1 = int(input('Amount of 1$ bills: '))\r\n\r\n    totalMoney = amountOf20 * 20 + amountOf10 * 10 + amountOf5 * 5 + amountOf1 * 1\r\n\r\n    return totalMoney\r\n\r\n\r\ndef menu(coffeeInformationList):\r\n    \"\"\"Display the information on the menu and take the selection from the user.\r\n\r\n    Args:\r\n        coffeeInformationList (list): List that contains the information of the coffee.\r\n\r\n    Returns:\r\n        str: The selection of the user.\r\n    \"\"\"\r\n    print('*************************************************************')\r\n    print('**             Welcome to the Coffee Machine!              **')\r\n    print('*************************************************************')\r\n    for i in range(0, len(coffeeInformationList)):\r\n        print('{0}. {1} [Water: {2}ml; Milk: {3}ml; Coffee: {4}ml]: {5}$'.format(i + 1, coffeeInformationList[i]['Name'], coffeeInformationList[i]\r\n                                                                                 ['WaterAmount'], coffeeInformationList[i]['MilkAmount'], coffeeInformationList[i]['CoffeeAmount'], coffeeInformationList[i]['Price']))\r\n    print('Quit [Q\\q]')\r\n    print('*************************************************************')\r\n\r\n    # Get the user selection.\r\n    selection = input('$ Please select your item: ')\r\n\r\n    return selection\r\n\r\n\r\ndef main():\r\n    \"\"\"The main function, that is the entry point of the program.\r\n    \"\"\"\r\n\r\n    # Initialize the machine.\r\n    coffeeInformationList, coffeeIngredientList, couponInformationList = initialization()\r\n\r\n    waterAmount = coffeeIngredientList[0]['Water']\r\n    milkAmount = coffeeIngredientList[0]['Milk']\r\n    coffeeAmount = coffeeIngredientList[0]['Coffee']\r\n\r\n    discount = 0.8\r\n\r\n    # Set the quit flag.\r\n    quitFlag = False\r\n\r\n    # This dictionary contains the sold amount of the coffee and the total price.\r\n    businessInformation = {}\r\n\r\n    for index in range(0, len(coffeeInformationList)):\r\n        businessInformation[coffeeInformationList[index]['Name']] = 0\r\n\r\n    businessInformation['Total Profile'] = 0\r\n\r\n    while not quitFlag:\r\n\r\n        selection = menu(coffeeInformationList)\r\n\r\n        if selection == 'Q' or selection == 'q':\r\n            # Quit the machine.\r\n            print(\"Thanks for using, quitting...\")\r\n            quitFlag = True\r\n        else:\r\n            # Check whether this item is available.\r\n            while int(selection) > len(coffeeInformationList):\r\n                print(\"Please select a valid item.\")\r\n                selection = menu(coffeeInformationList)\r\n            print('Checking the ability to produce this item...')\r\n\r\n            # Check whether this item can be produced.\r\n            ability = checkAbility(\r\n                waterAmount, milkAmount, coffeeAmount, coffeeInformationList, selection)\r\n\r\n            while not ability:\r\n                print(\"Sorry, we don't have enough ingredients to produce this item.\")\r\n                selection = menu(coffeeInformationList)\r\n                while int(selection) > len(coffeeInformationList):\r\n                    print(\"Please select a valid item.\")\r\n                    selection = menu(coffeeInformationList)\r\n\r\n                print('Checking the ability to produce this item...')\r\n\r\n                ability = checkAbility(\r\n                    waterAmount, milkAmount, coffeeAmount, coffeeInformationList, selection)\r\n\r\n            # Here, the coffee can be produced.\r\n            confirm = input(\r\n                'Good, this item can be produced, press \"c\" to continue:')\r\n            while confirm != 'c' and confirm != 'C':\r\n                confirm = input('Please enter \"c\" to continue:')\r\n\r\n            # Determine the price, for the next step of discout.\r\n            currentPrice = coffeeInformationList[int(selection) - 1]['Price']\r\n\r\n            # The step to check whether the user has a coupon.\r\n            haveCoupon = input('Do you have a coupon? [Y/N]: ')\r\n            while haveCoupon != 'Y' and haveCoupon != 'y' and haveCoupon != 'N' and haveCoupon != 'n':\r\n                haveCoupon = input(\r\n                    'Wrong operation, please enter the correct operation:')\r\n            if haveCoupon == 'Y' or haveCoupon == 'y':\r\n                # Check whether the coupon is valid.\r\n                coupon = input('Please enter your coupon([Q\\q] for quit): ')\r\n                while coupon not in couponInformationList:\r\n                    coupon = input('Please enter a valid coupon: ')\r\n\r\n                # Reduce the price.\r\n                currentPrice = coffeeInformationList[int(\r\n                    selection) - 1]['Price'] * discount\r\n                print('Good, you have a coupon with {2}%% discount, the price of your item will be: {0} * 0.8 = {1}, enjoy!'.format(\r\n                    coffeeInformationList[int(selection) - 1]['Price'], currentPrice, int(discount * 100)))\r\n\r\n            # If no coupon is available, just continue to the payment step.\r\n            totalPayment = 0\r\n            print(\"Please enter your cash.\")\r\n            # While the money is not enough.\r\n            while totalPayment < currentPrice:\r\n                # Get the total payment.\r\n                totalPayment += takeMoney()\r\n                print('Total payment: {0}'.format(totalPayment))\r\n                # Remind the user.\r\n                if totalPayment < currentPrice:\r\n                    print('This is not enough, please input more money.')\r\n\r\n            # Calculate the change.\r\n            print(\"Your change is {0}, please receipt it.\".format(\r\n                totalPayment - currentPrice))\r\n\r\n            # Consume the ingredients.\r\n            waterAmount -= coffeeInformationList[int(\r\n                selection) - 1]['WaterAmount']\r\n            milkAmount -= coffeeInformationList[int(\r\n                selection) - 1]['MilkAmount']\r\n            coffeeAmount -= coffeeInformationList[int(\r\n                selection) - 1]['CoffeeAmount']\r\n\r\n            # Produce the coffee.\r\n            print('Your coffee is making:')\r\n            print('................................................................')\r\n            time.sleep(2)\r\n            print('## Coffee prepared finished!')\r\n            print('................................................................')\r\n            time.sleep(2)\r\n            print('## Coffee making finished!')\r\n            print('................................................................')\r\n            time.sleep(2)\r\n            print('Coffee packaging finished!')\r\n\r\n            print('Please take it carefully!')\r\n\r\n            # Print the information of this business.\r\n\r\n            # First, we update the information.\r\n            businessInformation[coffeeInformationList[int(\r\n                selection) - 1]['Name']] += 1\r\n            businessInformation['Total Profile'] += currentPrice\r\n\r\n            # Then, print it, and write it to the external log file.\r\n            with open('./record.log', 'a') as f:\r\n                for key, value in businessInformation.items():\r\n                    if key == 'Total Profile':\r\n                        print('###{0}: {1}'.format(key, value))\r\n                        f.writelines('###{0}: {1}'.format(key, value) + '\\n')\r\n                    else:\r\n                        print('#{0}: {1}'.format(key, value))\r\n                        f.writelines('#{0}: {1}'.format(key, value) + '\\n')\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n"
        }
    ]
}